import * as React from 'react';
import { Text, View, StyleSheet, TouchableOpacity, Image ,TextInput,FlatList} from 'react-native';
import CustomInput1 from './CustomInput1';
export default class APP extends React.Component {
  constructor(props) {
    super(props);
    this.ConstObj={
      fname:"FirstName",
      lname:"LastName",
      pass:"Password",
      cpass:"ConfirmPassword"
    }
    this.state = {
      userData: [],
      isColor: false,
      screen:1,
      isShow:false,
      index:'',
      isTick:'',
       data:[
           {id:1,field:"FirstName",value:''},
            {id:2,field:"LastName",value:''},
             {id:3,field:"Password",value:''},
             {id:4,field:"ConfirmPassword",value:''},
            {id:5,field:"UserName",value:''},
             {id:6,field:"EmailId",value:''}
        
      ]
    };
  }
  componentDidMount() {
    this.handleInput();
  }
  handleInput = () => {
    fetch('https://www.mecallapi.com/api/users')
      //  resolve(responce)
      .then((response) => response.json())
      .then((json) => {
        this.setState({ userData: json });
      }).catch((err)=>{console.log("err-->",err)})
  };
  handleTextInput=(val,el)=>{
    console.log("val-->",val,"el-->",el.id)
     
    // console.log("hjjhb")
    let temp = this.state.data
      console.log("hjjhb")
    temp.forEach((tl)=>{

      console.log("hjjhb")
      if(tl.id===el.id)
      {
        tl.value=val
        console.log("hjjhb")
      }
    })
    this.setState({data:temp})
let temp1=this.state.data
temp1.forEach((el)=>{
  this.field=el.field
switch (this.field){
case this.ConstObj.cpass:
if(el.value==="")
{
  this.setState({isShow:false})
}
else{
  this.setState({isShow:true})

}
break;
default:break;

}
})

  }
  submit=()=>{
 

      fetch('https://www.mecallapi.com/api/users/create',{ 
  method: 'POST',
  headers: {
    Accept: 'application/json',
    'Content-Type': 'application/json'
  },
   body: JSON.stringify({
    "fname": this.state.data[0].value,
    "lname": this.state.data[1].value,
    "username": this.state.data[5].value,
    "password": "1234",
    "email": this.state.data[5].value,
    "avatar": "https://www.freeiconspng.com/thumbs/batman-png/batman-png-32.png"
  })
      })
   .then((res)=>res.json()).then(res=>{console.log("success-->",res)}).catch((err)=>{console.log(err="err")})
   let temp1=this.state.data
   temp1.forEach((el)=>{el.value=""})
   this.setState({data:temp1,isShow:false})
  } 
  dataDelete=(el)=>{
    console.log("el-->",el.id)
      fetch('https://www.mecallapi.com/api/users/delete',{ 
  method: 'DELETE',
  headers: {
    Accept: 'application/json',
    'Content-Type': 'application/json'
  },
   body: JSON.stringify({
   id:el.id
  })
    }).then((res)=>res.json()).then(res=>{console.log("res-->",res)})
    .catch((err)=>{console.log("err-->",err)})
    console.log("el-->",el)
  }
  handleChanges=(val,el)=>{
    console.log("val-->",val)
  let temp = this.state.userData;
    temp.filter((tl) => {
      if (tl.id === el.id) {
        tl.fname = val;
      }
    });

    this.setState({ userData: temp, });
  
  }
  handleEdit=(el)=>{
    let temp=this.state.userData
    temp.forEach((tl)=>{if(tl.id===el.id){
      this.setState({index:el.id})
    }})
  }
  handleSave=(el)=>{
   
      this.setState({isTick:this.state.index})
      fetch('https://www.mecallapi.com/api/users/update',{
         method: 'PUT',
  headers: {
    Accept: 'application/json',
    'Content-Type': 'application/json'
  },
   body: JSON.stringify({
    id:el.id,
    fname:el.fname
  })
      }).then((res)=>res.json()).then(res=>{console.log("res-->",res)})
    .catch((err)=>{console.log("err-->",err)})
    console.log("el-->",el)
      setTimeout(()=>
        this.setState({index:'',isTick:''}),500
     )
  }
  handleLoadMore=()=>{
    console.log("loadmore")
  }

  render() {
    console.log('this.state--->', this.state.userData, this.state.isColor);
    console.log("this.state.screen-->",this.state.screen)
    console.log("this.state data-->",this.state.data)
    console.log("userData1-->",this.state.userData1)
    return (
      <View style={{ flex: 1, backgroundColor: '#c8e4e4' }}>
        <View style={{ flexDirection: 'row', justifyContent: 'space-evenly' }}>
          <TouchableOpacity
            onPress={() => {
              this.setState({ screen: 1 });
            }}>
            <Text style={{ color: '#ff9d44' }}>SCREEN1</Text>
          </TouchableOpacity>
          <TouchableOpacity
            onPress={() => {
              this.setState({ screen: 2 });
            }}>
            <Text style={{ color: '#ff9d44' }}>SCREEN2</Text>
          </TouchableOpacity>
          <TouchableOpacity
            onPress={() => {
              this.setState({ screen: 3 });
            }}>
            <Text style={{ color: '#ff9d44' }}>SCREEN3</Text>
          </TouchableOpacity>
          <TouchableOpacity
            onPress={() => {
              this.setState({ screen: 4 });
            }}>
            <Text style={{ color: '#ff9d44' }}>SCREEN4</Text>
          </TouchableOpacity>
        </View>
        <View style={{ flexDirection: 'row', justifyContent: 'space-evenly' }}>
          <View
            style={{
              height: 5,
              width: 60,
              backgroundColor: this.state.screen === 1 && '#ff9d44',
            }}></View>
          <View
            style={{
              height: 5,
              width: 60,
              backgroundColor: this.state.screen === 2 && '#ff9d44',
            }}></View>
          <View
            style={{
              height: 5,
              width: 60,
              backgroundColor: this.state.screen === 3 && '#ff9d44',
            }}></View>
          <View
            style={{
              height: 5,
              width: 60,
              backgroundColor: this.state.screen === 4 && '#ff9d44',
            }}></View>
        </View>
        {this.state.screen===1&&<View style={{ alignItems: 'center' }}>
          <View
            style={{
              height: 60,
              width: 300,
              borderTopEndRadius: 5,
              borderTopStartRadius: 5,
              flexDirection: 'row',
              justifyContent: 'space-evenly',
              backgroundColor: '#37c2d0',
              alignItems: 'center',
              marginTop:4
            }}>
            <Text
              style={{ color: 'white', marginRight: 30, fontFamily: 'bold' }}>
              PROFILE
            </Text>
            <Text
              style={{ color: 'white', marginRight: 30, fontFamily: 'bold' }}>
              USERNAME
            </Text>
            <Text
              style={{ color: 'white', marginRight: 30, fontFamily: 'bold' }}>
              EMAIL
            </Text>
          </View>
          <FlatList
          data={this.state.userData}
          renderItem={({item,i})=>{
             return (
              <View
                style={{
                  height: 100,
                  width: 300,
                  flexDirection: 'row',
                  backgroundColor: i % 2 === 0 ? 'white' : '#f0fbfc',
                }}>
                <View
                  style={{
                    height: 100,
                    width: 80,
                    alignItems: 'center',
                    // shadowRadius: 3,
                    backgroundColor: i % 2 === 0 ? 'white' : '#f0fbfc',
                  }}>
                  <View style={{ height: 25, width: 80 }}>
                    <View
                      style={{ height: 12, width: 12, borderWidth: 1 }}></View>
                  </View>
                  <Image
                    style={{ height: 50, width: 50, borderRadius: 30 }}
                    source={{ uri: item.avatar }}
                  />
                </View>
                <View
                  style={{
                    height: 100,
                    width: 110,
                    justifyContent: 'center',
                    alignItems: 'center',
                  }}>
                  <TextInput style={{height:20,width:80}}
                  value={item.fname}
                  onChangeText={(this.state.index===item.id&&((val)=>{this.handleChanges(val,item);}))}/>
                  <Text>{item.lname}</Text>
                </View>
                <View
                  style={{
                    height: 100,
                    width: 110,
                  }}>
                  <View
                    style={{
                      justifyContent:"space-evenly",
                      flexDirection: 'row',
                    }}>
                  <TouchableOpacity onPress={()=>{this.handleSave(item);}}>  {this.state.index===item.id&&<View style={{height: 15, width: 15,borderWidth:1,borderRadius:4}}>{this.state.isTick===item.id&&<Image style={{height: 15, width: 15,}}source={{uri:'https://cdn-icons-png.flaticon.com/128/5291/5291032.png'}}/>}</View>}</TouchableOpacity>
                   <TouchableOpacity onPress={()=>{this.handleEdit(item)}}> <Image
                      style={{ height: 15, width: 15, marginRight: 10 }}
                      source={{
                        uri: 'https://cdn-icons-png.flaticon.com/128/1159/1159633.png',
                      }}
                    /></TouchableOpacity>
                    <TouchableOpacity onPress={()=>{this.dataDelete(item);}}><Image
                      style={{ height: 15, width: 15 }}
                      source={{
                        uri: 'https://cdn-icons-png.flaticon.com/128/1214/1214428.png',
                      }}
                    /></TouchableOpacity>
                  </View>
                  <Text style={{ fontSize: 9, marginTop: 10 }}>
                  </Text>
                </View>
              </View>
            );
          }}
          onEndReached={()=>this.handleLoadMore()}
          />
        </View>}
        {this.state.screen===2&&(<CustomInput1  data={this.state.data} handleTextInput={this.handleTextInput}/>)}
        {this.state.screen===2&&<View style={{alignItems:"center"}}>{this.state.isShow?<TouchableOpacity onPress={()=>{this.submit();}} style={{height:20,width:80,backgroundColor:"#1a1aff",alignItems:"center"}}><Text>SUBMIT</Text></TouchableOpacity>:<View style={{height:20,width:80,backgroundColor:"#9999ff",alignItems:"center"}}><Text>SUBMIT</Text></View>}</View>}
      </View>
    );
  }
}
const style = StyleSheet.create({
  mainView: {
    height: 100,
    width: 300,
    flexDirection: 'row',
    backgroundColor: 'white',
  },
});
